{"ast":null,"code":"var _jsxFileName = \"/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/WeatherBox.js\";\nimport React, { Component } from 'react';\nimport weatherConfig from '../config/config';\nimport Weather30Days from './Weather30Days';\nlet myData = [];\n\nclass WeatherBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n      api30DaysURL: weatherConfig.weatherData.weatherAPI.api30DaysURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n      cities: weatherConfig.weatherData.weatherCities,\n      weatherFetchData: [],\n      getCityID: ''\n    };\n    this.get30DaysWeather = this.get30DaysWeather.bind(this);\n  }\n\n  getCitiesID() {\n    const cities = this.state.cities;\n    cities.forEach(city => {\n      const _this$state = this.state,\n            apiURL = _this$state.apiURL,\n            apiKey = _this$state.apiKey;\n      let fetchURL = apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey;\n      fetch(fetchURL).then(response => {\n        return response.json();\n      }).then(response => {\n        myData.push(response);\n        this.setState({\n          weatherFetchData: myData\n        });\n      });\n    });\n  }\n\n  get30DaysWeather(getCityID) {\n    this.setState({\n      getCityID: getCityID\n    });\n  }\n\n  componentDidMount() {\n    this.getCitiesID();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default WeatherBox;","map":{"version":3,"sources":["/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/WeatherBox.js"],"names":["React","Component","weatherConfig","Weather30Days","myData","WeatherBox","constructor","props","state","apiURL","weatherData","weatherAPI","api30DaysURL","apiKey","imageURL","cities","weatherCities","weatherFetchData","getCityID","get30DaysWeather","bind","getCitiesID","forEach","city","fetchURL","id","fetch","then","response","json","push","setState","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,IAAIC,MAAM,GAAG,EAAb;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAC/BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACPC,MAAAA,MAAM,EAAEP,aAAa,CAACQ,WAAd,CAA0BC,UAA1B,CAAqCF,MADtC;AAEPG,MAAAA,YAAY,EAAEV,aAAa,CAACQ,WAAd,CAA0BC,UAA1B,CAAqCC,YAF5C;AAGPC,MAAAA,MAAM,EAAEX,aAAa,CAACQ,WAAd,CAA0BC,UAA1B,CAAqCE,MAHtC;AAIPC,MAAAA,QAAQ,EAAEZ,aAAa,CAACQ,WAAd,CAA0BC,UAA1B,CAAqCG,QAJxC;AAKPC,MAAAA,MAAM,EAAEb,aAAa,CAACQ,WAAd,CAA0BM,aAL3B;AAMPC,MAAAA,gBAAgB,EAAE,EANX;AAOPC,MAAAA,SAAS,EAAE;AAPJ,KAAX;AAUA,SAAKC,gBAAL,GAAsB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAtB;AACH;;AAEDC,EAAAA,WAAW,GAAE;AAAA,UACFN,MADE,GACO,KAAKP,KADZ,CACFO,MADE;AAETA,IAAAA,MAAM,CAACO,OAAP,CAAgBC,IAAD,IAAU;AAAA,0BACG,KAAKf,KADR;AAAA,YACfC,MADe,eACfA,MADe;AAAA,YACPI,MADO,eACPA,MADO;AAErB,UAAIW,QAAQ,GAAEf,MAAM,GAAG,MAAT,GAAkBc,IAAI,CAACE,EAAvB,GAA4B,SAA5B,GAAwCZ,MAAtD;AAEAa,MAAAA,KAAK,CAACF,QAAD,CAAL,CAAgBG,IAAhB,CAAsBC,QAAD,IAAc;AAC/B,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAFD,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClBxB,QAAAA,MAAM,CAAC0B,IAAP,CAAYF,QAAZ;AACA,aAAKG,QAAL,CAAc;AACVd,UAAAA,gBAAgB,EAAEb;AADR,SAAd;AAGH,OAPD;AAQH,KAZD;AAcH;;AAEDe,EAAAA,gBAAgB,CAACD,SAAD,EAAW;AAEvB,SAAKa,QAAL,CAAc;AACVb,MAAAA,SAAS,EAAEA;AADD,KAAd;AAIH;;AAEDc,EAAAA,iBAAiB,GAAE;AACf,SAAKX,WAAL;AACH;;AAEDY,EAAAA,MAAM,GAAG;AAEL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH;;AAvD8B;;AA0DnC,eAAe5B,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport weatherConfig from '../config/config'\nimport Weather30Days from './Weather30Days';\n\nlet myData = [];\n\nclass WeatherBox extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n            api30DaysURL: weatherConfig.weatherData.weatherAPI.api30DaysURL,\n            apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n            imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n            cities: weatherConfig.weatherData.weatherCities,\n            weatherFetchData: [],\n            getCityID: ''\n        }\n\n        this.get30DaysWeather=this.get30DaysWeather.bind(this)\n    }\n\n    getCitiesID(){\n        const {cities}= this.state;\n        cities.forEach((city) => {\n            const{apiURL, apiKey} = this.state;\n            let fetchURL= apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey; \n\n            fetch(fetchURL).then((response) => {\n                return response.json();\n            }).then((response) => {\n                myData.push(response);\n                this.setState({\n                    weatherFetchData: myData\n                })\n            });\n        });\n        \n    }\n\n    get30DaysWeather(getCityID){\n        \n        this.setState({\n            getCityID: getCityID\n        })\n           \n    }\n\n    componentDidMount(){\n        this.getCitiesID();\n    }\n\n    render() {\n        \n        return (\n            <React.Fragment>\n                \n            </React.Fragment>\n            \n        )\n    }\n}\n\nexport default WeatherBox;"]},"metadata":{},"sourceType":"module"}