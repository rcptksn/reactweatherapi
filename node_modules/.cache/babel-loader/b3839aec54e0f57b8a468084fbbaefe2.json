{"ast":null,"code":"var _jsxFileName = \"/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/WeatherBox.js\";\nimport React, { Component } from 'react';\nimport weatherConfig from '../config/config';\nlet myData = [];\nexport default class WeatherBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n      cities: weatherConfig.weatherData.weatherCities,\n      weatherFetchData: []\n    };\n  }\n\n  getCitiesID() {\n    const cities = this.state.cities;\n    cities.forEach(item => {\n      this.getFetchCitiesWeather(item.id);\n    });\n  }\n\n  getFetchCitiesWeather(cityID) {\n    const _this$state = this.state,\n          apiURL = _this$state.apiURL,\n          apiKey = _this$state.apiKey;\n    let fetchURL = apiURL + \"?id=\" + cityID + \"&appid=\" + apiKey;\n    fetch(fetchURL).then(response => {\n      return response.json();\n    }).then(response => {\n      //console.log(response)\n      myData.push(response);\n    });\n    this.setState({\n      weatherFetchData: myData\n    });\n  }\n\n  componentDidMount() {\n    this.getCitiesID();\n    console.log(this.state.weatherFetchData);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.weatherFetchData.map((item, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, item));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/WeatherBox.js"],"names":["React","Component","weatherConfig","myData","WeatherBox","constructor","props","state","apiURL","weatherData","weatherAPI","apiKey","imageURL","cities","weatherCities","weatherFetchData","getCitiesID","forEach","item","getFetchCitiesWeather","id","cityID","fetchURL","fetch","then","response","json","push","setState","componentDidMount","console","log","render","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,IAAIC,MAAM,GAAG,EAAb;AAEA,eAAe,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAC9CI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACPC,MAAAA,MAAM,EAAEN,aAAa,CAACO,WAAd,CAA0BC,UAA1B,CAAqCF,MADtC;AAEPG,MAAAA,MAAM,EAAET,aAAa,CAACO,WAAd,CAA0BC,UAA1B,CAAqCC,MAFtC;AAGPC,MAAAA,QAAQ,EAAEV,aAAa,CAACO,WAAd,CAA0BC,UAA1B,CAAqCE,QAHxC;AAIPC,MAAAA,MAAM,EAAEX,aAAa,CAACO,WAAd,CAA0BK,aAJ3B;AAKPC,MAAAA,gBAAgB,EAAE;AALX,KAAX;AAOH;;AAEDC,EAAAA,WAAW,GAAE;AAAA,UACFH,MADE,GACO,KAAKN,KADZ,CACFM,MADE;AAETA,IAAAA,MAAM,CAACI,OAAP,CAAgBC,IAAD,IAAU;AACrB,WAAKC,qBAAL,CAA2BD,IAAI,CAACE,EAAhC;AACH,KAFD;AAIH;;AAEDD,EAAAA,qBAAqB,CAACE,MAAD,EAAQ;AAAA,wBACD,KAAKd,KADJ;AAAA,UACnBC,MADmB,eACnBA,MADmB;AAAA,UACXG,MADW,eACXA,MADW;AAEzB,QAAIW,QAAQ,GAAEd,MAAM,GAAG,MAAT,GAAkBa,MAAlB,GAA2B,SAA3B,GAAuCV,MAArD;AAGAY,IAAAA,KAAK,CAACD,QAAD,CAAL,CAAgBE,IAAhB,CAAsBC,QAAD,IAAc;AAC/B,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAFD,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClB;AACAtB,MAAAA,MAAM,CAACwB,IAAP,CAAYF,QAAZ;AACH,KALD;AAMA,SAAKG,QAAL,CAAc;AACVb,MAAAA,gBAAgB,EAAEZ;AADR,KAAd;AAIH;;AAED0B,EAAAA,iBAAiB,GAAE;AACf,SAAKb,WAAL;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxB,KAAL,CAAWQ,gBAAvB;AACH;;AAEDiB,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKzB,KAAL,CAAWQ,gBAAX,CAA4BkB,GAA5B,CAAgC,CAACf,IAAD,EAAOgB,KAAP,KAAiB;AAC7C,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKhB,IAAL,CADJ,CADJ;AAKH,KAND,CAFR,CADJ;AAaH;;AA1D6C","sourcesContent":["import React, { Component } from 'react'\nimport weatherConfig from '../config/config'\n\nlet myData = [];\n\nexport default class WeatherBox extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n            apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n            imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n            cities: weatherConfig.weatherData.weatherCities,\n            weatherFetchData: []\n        }\n    }\n\n    getCitiesID(){\n        const {cities}= this.state;\n        cities.forEach((item) => {\n            this.getFetchCitiesWeather(item.id)\n        });\n        \n    }\n    \n    getFetchCitiesWeather(cityID){\n        const{apiURL, apiKey} = this.state;\n        let fetchURL= apiURL + \"?id=\" + cityID + \"&appid=\" + apiKey; \n        \n        \n        fetch(fetchURL).then((response) => {\n            return response.json();\n        }).then((response) => {\n            //console.log(response)\n            myData.push(response)\n        });\n        this.setState({\n            weatherFetchData: myData\n        });\n        \n    }\n\n    componentDidMount(){\n        this.getCitiesID();\n        console.log(this.state.weatherFetchData);\n    }\n\n    render() {\n        \n        return (\n            <div>\n                {\n                    this.state.weatherFetchData.map((item, index) => {\n                        return(\n                            <div>\n                                <h2>{item}</h2>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}