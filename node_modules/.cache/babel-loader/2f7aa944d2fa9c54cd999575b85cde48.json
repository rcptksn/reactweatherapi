{"ast":null,"code":"var _jsxFileName = \"/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/Weather30Days.js\";\nimport React, { Component } from 'react';\nimport weatherConfig from '../config/config';\nlet myData = [];\n\nclass Weather30Days extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      api30DaysURL: weatherConfig.weatherData.weatherAPI.api30DaysURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n      weatherFetchData: [],\n      myCityName: ''\n    };\n  }\n\n  componentDidUpdate() {\n    this.get30DaysWeather();\n  }\n\n  get30DaysWeather() {\n    const myCityID = this.props.myCityID;\n\n    if (myCityID != \"\") {\n      const _this$state = this.state,\n            api30DaysURL = _this$state.api30DaysURL,\n            apiKey = _this$state.apiKey;\n      let fetchURL = api30DaysURL + \"?id=\" + myCityID + \"&appid=\" + apiKey;\n      fetch(fetchURL).then(response => {\n        return response.json();\n      }).then(response => {\n        this.setState({\n          myCityName: response.city.name\n        });\n        return response.list;\n      }).then(response => {\n        this.setState({\n          weatherFetchData: response\n        });\n      }).catch(err => {\n        console.log('Bir hata oluştu.' + err);\n      });\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          myCityName = _this$state2.myCityName,\n          weatherFetchData = _this$state2.weatherFetchData;\n    return React.createElement(\"div\", {\n      className: \"col-12 mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.myCityName != '' ? this.state.myCityName + ' ili 30 Günlük Hava Durumu' : ''), weatherFetchData.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, item.temp.day);\n    }));\n  }\n\n}\n\nexport default Weather30Days;","map":{"version":3,"sources":["/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/Weather30Days.js"],"names":["React","Component","weatherConfig","myData","Weather30Days","constructor","props","state","api30DaysURL","weatherData","weatherAPI","apiKey","imageURL","weatherFetchData","myCityName","componentDidUpdate","get30DaysWeather","myCityID","fetchURL","fetch","then","response","json","setState","city","name","list","catch","err","console","log","render","map","item","index","temp","day"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,IAAIC,MAAM,GAAE,EAAZ;;AACA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAElCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACPC,MAAAA,YAAY,EAAEN,aAAa,CAACO,WAAd,CAA0BC,UAA1B,CAAqCF,YAD5C;AAEPG,MAAAA,MAAM,EAAET,aAAa,CAACO,WAAd,CAA0BC,UAA1B,CAAqCC,MAFtC;AAGPC,MAAAA,QAAQ,EAAEV,aAAa,CAACO,WAAd,CAA0BC,UAA1B,CAAqCE,QAHxC;AAIPC,MAAAA,gBAAgB,EAAE,EAJX;AAKPC,MAAAA,UAAU,EAAE;AALL,KAAX;AAQH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKC,gBAAL;AACH;;AAGDA,EAAAA,gBAAgB,GAAE;AAAA,UACPC,QADO,GACK,KAAKX,KADV,CACPW,QADO;;AAEd,QAAGA,QAAQ,IAAI,EAAf,EACA;AAAA,0BACkC,KAAKV,KADvC;AAAA,YACUC,YADV,eACUA,YADV;AAAA,YACwBG,MADxB,eACwBA,MADxB;AAEI,UAAIO,QAAQ,GAAEV,YAAY,GAAG,MAAf,GAAwBS,QAAxB,GAAmC,SAAnC,GAA+CN,MAA7D;AAEAQ,MAAAA,KAAK,CAACD,QAAD,CAAL,CAAgBE,IAAhB,CAAsBC,QAAD,IAAc;AAC/B,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAFD,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClB,aAAKE,QAAL,CAAc;AACVT,UAAAA,UAAU,EAAEO,QAAQ,CAACG,IAAT,CAAcC;AADhB,SAAd;AAGA,eAAOJ,QAAQ,CAACK,IAAhB;AACH,OAPD,EAOGN,IAPH,CAOSC,QAAD,IAAc;AAClB,aAAKE,QAAL,CAAc;AACVV,UAAAA,gBAAgB,EAAEQ;AADR,SAAd;AAGH,OAXD,EAWGM,KAXH,CAWUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBF,GAAjC;AACH,OAbD;AAcH;AACJ;;AAGDG,EAAAA,MAAM,GAAG;AAAA,yBACmC,KAAKxB,KADxC;AAAA,UACEO,UADF,gBACEA,UADF;AAAA,UACcD,gBADd,gBACcA,gBADd;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKN,KAAL,CAAWO,UAAX,IAAyB,EAAzB,GAA8B,KAAKP,KAAL,CAAWO,UAAX,GAAwB,4BAAtD,GAAqF,EAA1F,CADJ,EAGQD,gBAAgB,CAACmB,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,aACI;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IAAI,CAACE,IAAL,CAAUC,GADf,CADJ;AAKH,KAND,CAHR,CADJ;AAcH;;AA7DiC;;AAgEtC,eAAehC,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport weatherConfig from '../config/config'\n\nlet myData= [];\nclass Weather30Days extends Component {\n    \n    constructor(props){\n        super(props);\n\n        this.state={\n            api30DaysURL: weatherConfig.weatherData.weatherAPI.api30DaysURL,\n            apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n            imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n            weatherFetchData: [],\n            myCityName: ''\n        }\n        \n    }\n\n    componentDidUpdate(){\n        this.get30DaysWeather();\n    }\n\n\n    get30DaysWeather(){\n        const {myCityID} = this.props;\n        if(myCityID != \"\")\n        {\n            const{api30DaysURL, apiKey} = this.state;\n            let fetchURL= api30DaysURL + \"?id=\" + myCityID + \"&appid=\" + apiKey; \n            \n            fetch(fetchURL).then((response) => {\n                return response.json();\n            }).then((response) => {\n                this.setState({\n                    myCityName: response.city.name\n                });\n                return response.list;\n            }).then((response) => {\n                this.setState({\n                    weatherFetchData: response\n                });\n            }).catch((err) => {\n                console.log('Bir hata oluştu.' + err);\n            });\n        }\n    }\n\n    \n    render() {\n        const {myCityName, weatherFetchData } = this.state;\n        return (\n            <div className=\"col-12 mt-5\">\n                <h2>{this.state.myCityName != '' ? this.state.myCityName + ' ili 30 Günlük Hava Durumu' : ''}</h2>\n                {\n                    weatherFetchData.map((item, index) => {\n                        return(\n                            <div key={index}>\n                                {item.temp.day}\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Weather30Days;\n"]},"metadata":{},"sourceType":"module"}