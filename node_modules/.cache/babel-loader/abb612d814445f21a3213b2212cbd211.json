{"ast":null,"code":"var _jsxFileName = \"/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport WeatherBox from './components/WeatherBox';\nimport Weather30Days from './components/Weather30Days';\nimport weatherConfig from './config/config';\nlet myData = [];\nlet myOK = [];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n      api30DaysURL: weatherConfig.weatherData.weatherAPI.api30DaysURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n      cities: weatherConfig.weatherData.weatherCities,\n      weatherFetchData: [],\n      weather30DayFetchData: [],\n      getCityID: '',\n      getCityName: ''\n    };\n    console.log('aaa' + myOK);\n  }\n\n  getCitiesID() {\n    const cities = this.state.cities;\n    cities.forEach(city => {\n      const _this$state = this.state,\n            apiURL = _this$state.apiURL,\n            apiKey = _this$state.apiKey;\n      let fetchURL = apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey;\n      fetch(fetchURL).then(response => {\n        return response.json();\n      }).then(response => {\n        myData.push(response);\n        this.setState({\n          weatherFetchData: myData\n        });\n      }).catch(err => {\n        console.log('Bir hata oluştu.' + err);\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    console.log('app');\n  }\n\n  get30DaysWeather() {\n    const myCityID = this.props.myCityID;\n    let myCityName = \"\";\n\n    if (myCityID != \"\") {\n      const _this$state2 = this.state,\n            api30DaysURL = _this$state2.api30DaysURL,\n            apiKey = _this$state2.apiKey;\n      let fetchURL = api30DaysURL + \"?id=\" + myCityID + \"&appid=\" + apiKey;\n      fetch(fetchURL).then(response => {\n        return response.json();\n      }).then(response => {\n        myCityName = response.city.name;\n        return response.list;\n      }).then(response => {\n        this.setState({\n          weather30DayFetchData: response\n        });\n      }).catch(err => {\n        console.log('Bir hata oluştu.' + err);\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getCitiesID();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(WeatherBox, {\n      weatherFetchData: this.state.weatherFetchData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Weather30Days, {\n      myCityName: \"\\u0130stanbul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/App.js"],"names":["React","Component","WeatherBox","Weather30Days","weatherConfig","myData","myOK","App","constructor","props","state","apiURL","weatherData","weatherAPI","api30DaysURL","apiKey","imageURL","cities","weatherCities","weatherFetchData","weather30DayFetchData","getCityID","getCityName","console","log","getCitiesID","forEach","city","fetchURL","id","fetch","then","response","json","push","setState","catch","err","componentDidUpdate","get30DaysWeather","myCityID","myCityName","name","list","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport WeatherBox from './components/WeatherBox';\nimport Weather30Days from './components/Weather30Days';\nimport weatherConfig from './config/config'\n\nlet myData= [];\nlet myOK= []\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n      apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n      api30DaysURL: weatherConfig.weatherData.weatherAPI.api30DaysURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n      cities: weatherConfig.weatherData.weatherCities,\n      weatherFetchData: [],\n      weather30DayFetchData: [],\n      getCityID: '',\n      getCityName: ''\n    }\n\n    console.log('aaa' + myOK);\n\n  }\n\n  getCitiesID(){\n    const {cities}= this.state;\n    cities.forEach((city) => {\n        const{apiURL, apiKey} = this.state;\n        let fetchURL= apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey; \n\n        fetch(fetchURL).then((response) => {\n            return response.json();\n        }).then((response) => {\n            myData.push(response);\n            this.setState({\n                weatherFetchData: myData\n            })\n        }).catch((err) => {\n            console.log('Bir hata oluştu.' + err);\n        });\n    });\n  }\n\n  componentDidUpdate(){\n    console.log('app');\n  }\n\n  get30DaysWeather(){\n    const {myCityID} = this.props;\n    let myCityName=\"\";\n    if(myCityID != \"\")\n    {\n        const{api30DaysURL, apiKey} = this.state;\n        let fetchURL= api30DaysURL + \"?id=\" + myCityID + \"&appid=\" + apiKey; \n        \n        fetch(fetchURL).then((response) => {\n            return response.json();\n        }).then((response) => {\n            myCityName= response.city.name;\n            return response.list;\n        }).then((response) => {\n            this.setState({\n                weather30DayFetchData: response\n            });\n        }).catch((err) => {\n            console.log('Bir hata oluştu.' + err);\n        });  \n    }\n}\n\n  componentDidMount(){\n      this.getCitiesID();\n  }\n\n  \n\n  render(){\n    return (\n      <div className=\"App\">\n        <WeatherBox weatherFetchData={this.state.weatherFetchData} />\n        <Weather30Days myCityName= 'İstanbul' />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}