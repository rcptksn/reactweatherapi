{"ast":null,"code":"var _jsxFileName = \"/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/Weather30Days.js\";\nimport React, { Component } from 'react';\nimport weatherConfig from '../config/config';\nlet myData = [];\nlet getCityName = '';\n\nclass Weather30Days extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weatherFetchData: [],\n      myCityName: '',\n      api30DaysURL: weatherConfig.weatherData.weatherAPI.api30DaysURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL\n    };\n  }\n\n  get30DaysWeather() {\n    const cityID = this.props.cityID;\n\n    if (cityID != \"\") {\n      const _this$state = this.state,\n            api30DaysURL = _this$state.api30DaysURL,\n            apiKey = _this$state.apiKey;\n      let fetchURL = api30DaysURL + \"?id=\" + cityID + \"&appid=\" + apiKey;\n      fetch(fetchURL).then(response => {\n        return response.json();\n      }).then(response => {\n        getCityName = response.city.name;\n        return response.list;\n      }).then(response => {\n        this.setState({\n          weatherFetchData: response,\n          myCityName: getCityName\n        });\n      }).catch(err => {\n        console.log('Bir hata oluştu.' + err);\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.get30DaysWeather();\n  }\n\n  render() {\n    const myCityName = this.state.myCityName;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, myCityName != '' ? myCityName + ' ili 15 Günlük Hava Durumu' : ''), React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"S\\u0131cakl\\u0131k\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"En Y\\xFCksek\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"En D\\xFC\\u015F\\xFCk\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Nem Oran\\u0131\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"R\\xFCzgar\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Bulut\"))), this.state.weatherFetchData.map((item, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.imageURL + item.weather[0].icon + '.png',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, item.temp.day, \" \", React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"o\"), \"C\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, item.temp.max, \" \", React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"o\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, item.temp.min, \" \", React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"o\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, item.humidity, \" \", React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \" %\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, item.speed, React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" km/s\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, item.clouds, \" \", React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \" %\")));\n    }))));\n  }\n\n}\n\nexport default Weather30Days;","map":{"version":3,"sources":["/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/Weather30Days.js"],"names":["React","Component","weatherConfig","myData","getCityName","Weather30Days","constructor","props","state","weatherFetchData","myCityName","api30DaysURL","weatherData","weatherAPI","apiKey","imageURL","get30DaysWeather","cityID","fetchURL","fetch","then","response","json","city","name","list","setState","catch","err","console","log","componentDidUpdate","render","map","item","index","weather","icon","temp","day","max","min","humidity","speed","clouds"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport weatherConfig from '../config/config'\n\nlet myData= [];\nlet getCityName= '';\nclass Weather30Days extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state= {\n            weatherFetchData: [],\n            myCityName: '',\n            api30DaysURL: weatherConfig.weatherData.weatherAPI.api30DaysURL,\n            apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n            imageURL: weatherConfig.weatherData.weatherAPI.imageURL\n        }\n    }\n\n    get30DaysWeather(){\n        const {cityID} = this.props;\n        if(cityID != \"\")\n        {\n            const{api30DaysURL, apiKey} = this.state;\n            let fetchURL= api30DaysURL + \"?id=\" + cityID + \"&appid=\" + apiKey; \n            \n            fetch(fetchURL).then((response) => {\n                return response.json();\n            }).then((response) => {\n                getCityName= response.city.name;\n                return response.list;\n            }).then((response) => {\n                this.setState({\n                    weatherFetchData: response,\n                    myCityName: getCityName\n                  });\n            }).catch((err) => {\n                console.log('Bir hata oluştu.' + err);\n            });  \n        }\n      }\n\n      componentDidUpdate(){\n          this.get30DaysWeather();\n      }\n    \n    render() {\n        const {myCityName} = this.state;\n        return (\n            <React.Fragment>\n                <div className=\"col-12 mt-5\">\n                <h2>{myCityName != '' ? myCityName + ' ili 15 Günlük Hava Durumu' : ''}</h2>\n                <table className=\"table table-striped\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th></th>\n                            <th>Sıcaklık</th>\n                            <th>En Yüksek</th>\n                            <th>En Düşük</th>\n                            <th>Nem Oranı</th>\n                            <th>Rüzgar</th>\n                            <th>Bulut</th>\n                        </tr>\n                    </thead>\n                        {\n                            this.state.weatherFetchData.map((item, index) => {\n                                return(\n                                    <tr key={index}>\n                                        <td><img src={this.state.imageURL + item.weather[0].icon + '.png'} /></td>\n                                        <td>{item.temp.day} <sup>o</sup>C</td>\n                                        <td>{item.temp.max} <sup>o</sup></td>\n                                        <td>{item.temp.min} <sup>o</sup></td>\n                                        <td>{item.humidity} <sup> %</sup></td>\n                                        <td>{item.speed }<sup> km/s</sup></td>\n                                        <td>{item.clouds} <sup> %</sup></td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </table>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Weather30Days;\n"]},"metadata":{},"sourceType":"module"}