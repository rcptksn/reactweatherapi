{"ast":null,"code":"var _jsxFileName = \"/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/WeatherBox.js\";\nimport React, { Component } from 'react';\nimport weatherConfig from '../config/config';\nlet myData = [];\n\nclass WeatherBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n      cities: weatherConfig.weatherData.weatherCities,\n      weatherFetchData: []\n    };\n  }\n\n  getCitiesID() {\n    const cities = this.state.cities;\n    cities.forEach(city => {\n      const _this$state = this.state,\n            apiURL = _this$state.apiURL,\n            apiKey = _this$state.apiKey;\n      let fetchURL = apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey;\n      fetch(fetchURL).then(response => {\n        return response.json();\n      }).then(response => {\n        myData.push(response);\n        this.setState({\n          weatherFetchData: myData\n        });\n      });\n    });\n  }\n\n  componentDidMount() {}\n\n  componentWillMount() {\n    this.getCitiesID();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.weatherFetchData.map(item => {\n      return React.createElement(\"div\", {\n        className: \"weatherItems\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"weatherIcon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, item.weather.icon));\n    }));\n  }\n\n}\n\nexport default WeatherBox;","map":{"version":3,"sources":["/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/WeatherBox.js"],"names":["React","Component","weatherConfig","myData","WeatherBox","constructor","props","state","apiURL","weatherData","weatherAPI","apiKey","imageURL","cities","weatherCities","weatherFetchData","getCitiesID","forEach","city","fetchURL","id","fetch","then","response","json","push","setState","componentDidMount","componentWillMount","render","map","item","weather","icon"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,IAAIC,MAAM,GAAG,EAAb;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACPC,MAAAA,MAAM,EAAEN,aAAa,CAACO,WAAd,CAA0BC,UAA1B,CAAqCF,MADtC;AAEPG,MAAAA,MAAM,EAAET,aAAa,CAACO,WAAd,CAA0BC,UAA1B,CAAqCC,MAFtC;AAGPC,MAAAA,QAAQ,EAAEV,aAAa,CAACO,WAAd,CAA0BC,UAA1B,CAAqCE,QAHxC;AAIPC,MAAAA,MAAM,EAAEX,aAAa,CAACO,WAAd,CAA0BK,aAJ3B;AAKPC,MAAAA,gBAAgB,EAAE;AALX,KAAX;AAOH;;AAEDC,EAAAA,WAAW,GAAE;AAAA,UACFH,MADE,GACO,KAAKN,KADZ,CACFM,MADE;AAETA,IAAAA,MAAM,CAACI,OAAP,CAAgBC,IAAD,IAAU;AAAA,0BACG,KAAKX,KADR;AAAA,YACfC,MADe,eACfA,MADe;AAAA,YACPG,MADO,eACPA,MADO;AAErB,UAAIQ,QAAQ,GAAEX,MAAM,GAAG,MAAT,GAAkBU,IAAI,CAACE,EAAvB,GAA4B,SAA5B,GAAwCT,MAAtD;AAEAU,MAAAA,KAAK,CAACF,QAAD,CAAL,CAAgBG,IAAhB,CAAsBC,QAAD,IAAc;AAC/B,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAFD,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClBpB,QAAAA,MAAM,CAACsB,IAAP,CAAYF,QAAZ;AACA,aAAKG,QAAL,CAAc;AACVX,UAAAA,gBAAgB,EAAEZ;AADR,SAAd;AAGH,OAPD;AAQH,KAZD;AAcH;;AAEDwB,EAAAA,iBAAiB,GAAE,CAElB;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKZ,WAAL;AACH;;AAEDa,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKtB,KAAL,CAAWQ,gBAAX,CAA4Be,GAA5B,CAAiCC,IAAD,IAAU;AACtC,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,IAAI,CAACC,OAAL,CAAaC,IADlB,CADJ,CADJ;AAOH,KARD,CAFR,CADJ;AAgBH;;AAzD8B;;AA4DnC,eAAe7B,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport weatherConfig from '../config/config'\n\nlet myData = [];\n\nclass WeatherBox extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n            apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n            imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n            cities: weatherConfig.weatherData.weatherCities,\n            weatherFetchData: []\n        }\n    }\n\n    getCitiesID(){\n        const {cities}= this.state;\n        cities.forEach((city) => {\n            const{apiURL, apiKey} = this.state;\n            let fetchURL= apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey; \n\n            fetch(fetchURL).then((response) => {\n                return response.json();\n            }).then((response) => {\n                myData.push(response);\n                this.setState({\n                    weatherFetchData: myData\n                })\n            });\n        });\n        \n    }\n\n    componentDidMount(){\n        \n    }\n\n    componentWillMount(){\n        this.getCitiesID();\n    }\n\n    render() {\n        \n        return (\n            <div>\n                {\n                    this.state.weatherFetchData.map((item) => {\n                        return(\n                            <div className=\"weatherItems\">\n                                <div className=\"weatherIcon\">\n                                    {item.weather.icon}\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n                \n            </div>\n        )\n    }\n}\n\nexport default WeatherBox;"]},"metadata":{},"sourceType":"module"}