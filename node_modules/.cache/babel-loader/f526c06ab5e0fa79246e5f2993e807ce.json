{"ast":null,"code":"var _jsxFileName = \"/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport WeatherBox from './components/WeatherBox';\nimport weatherConfig from './config/config';\nlet weatherFetchData = [];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n      cities: weatherConfig.weatherData.weatherCities\n    };\n  }\n\n  componentDidMount() {\n    this.getCitiesID();\n  }\n\n  getCitiesID() {\n    const cities = this.state.cities;\n    cities.forEach(city => {\n      const _this$state = this.state,\n            apiURL = _this$state.apiURL,\n            apiKey = _this$state.apiKey;\n      let fetchURL = apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey;\n      fetch(fetchURL).then(response => {\n        return response.json();\n      }).then(response => {\n        //console.log(response)\n        weatherFetchData.push(response);\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(WeatherBox, {\n      myWeatherData: this.state.weatherFetchData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/App.js"],"names":["React","Component","WeatherBox","weatherConfig","weatherFetchData","App","constructor","props","state","apiURL","weatherData","weatherAPI","apiKey","imageURL","cities","weatherCities","componentDidMount","getCitiesID","forEach","city","fetchURL","id","fetch","then","response","json","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,IAAIC,gBAAgB,GAAG,EAAvB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,MAAM,EAAEN,aAAa,CAACO,WAAd,CAA0BC,UAA1B,CAAqCF,MADpC;AAETG,MAAAA,MAAM,EAAET,aAAa,CAACO,WAAd,CAA0BC,UAA1B,CAAqCC,MAFpC;AAGTC,MAAAA,QAAQ,EAAEV,aAAa,CAACO,WAAd,CAA0BC,UAA1B,CAAqCE,QAHtC;AAITC,MAAAA,MAAM,EAAEX,aAAa,CAACO,WAAd,CAA0BK;AAJzB,KAAX;AAMD;;AAEDC,EAAAA,iBAAiB,GAAE;AACb,SAAKC,WAAL;AACL;;AAEDA,EAAAA,WAAW,GAAE;AAAA,UACJH,MADI,GACK,KAAKN,KADV,CACJM,MADI;AAEXA,IAAAA,MAAM,CAACI,OAAP,CAAgBC,IAAD,IAAU;AAAA,0BACG,KAAKX,KADR;AAAA,YACfC,MADe,eACfA,MADe;AAAA,YACPG,MADO,eACPA,MADO;AAErB,UAAIQ,QAAQ,GAAEX,MAAM,GAAG,MAAT,GAAkBU,IAAI,CAACE,EAAvB,GAA4B,SAA5B,GAAwCT,MAAtD;AACAU,MAAAA,KAAK,CAACF,QAAD,CAAL,CAAgBG,IAAhB,CAAsBC,QAAD,IAAc;AAC/B,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAFD,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClB;AACApB,QAAAA,gBAAgB,CAACsB,IAAjB,CAAsBF,QAAtB;AACH,OALD;AAMH,KATD;AAUD;;AAEDG,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,aAAa,EAAE,KAAKnB,KAAL,CAAWJ,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAnCyB;;AAsC5B,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport WeatherBox from './components/WeatherBox';\nimport weatherConfig from './config/config'\n\nlet weatherFetchData = [];\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n      cities: weatherConfig.weatherData.weatherCities,\n    }\n  }\n\n  componentDidMount(){\n        this.getCitiesID();\n  }\n\n  getCitiesID(){\n    const {cities}= this.state;\n    cities.forEach((city) => {\n        const{apiURL, apiKey} = this.state;\n        let fetchURL= apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey; \n        fetch(fetchURL).then((response) => {\n            return response.json();\n        }).then((response) => {\n            //console.log(response)\n            weatherFetchData.push(response)\n        });\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <WeatherBox myWeatherData={this.state.weatherFetchData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}