{"ast":null,"code":"var _jsxFileName = \"/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/WeatherBox.js\";\nimport React, { Component } from 'react';\nimport weatherConfig from '../config/config';\nlet myData = [];\n\nclass WeatherBox extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getCitiesID() {\n    const cities = this.state.cities;\n    cities.forEach(item => {\n      this.getFetchCitiesWeather(item.id);\n    });\n  }\n\n  getFetchCitiesWeather(cityID) {\n    const _this$state = this.state,\n          apiURL = _this$state.apiURL,\n          apiKey = _this$state.apiKey;\n    let fetchURL = apiURL + \"?id=\" + cityID + \"&appid=\" + apiKey;\n    fetch(fetchURL).then(response => {\n      return response.json();\n    }).then(response => {\n      //console.log(response)\n      myData.push(response);\n    });\n    this.setState({\n      weatherFetchData: myData\n    });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.weatherFetchData.map((item, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, item));\n    }));\n  }\n\n}\n\nexport default WeatherBox;","map":{"version":3,"sources":["/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/WeatherBox.js"],"names":["React","Component","weatherConfig","myData","WeatherBox","constructor","props","getCitiesID","cities","state","forEach","item","getFetchCitiesWeather","id","cityID","apiURL","apiKey","fetchURL","fetch","then","response","json","push","setState","weatherFetchData","componentDidMount","render","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,IAAIC,MAAM,GAAG,EAAb;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEDC,EAAAA,WAAW,GAAE;AAAA,UACFC,MADE,GACO,KAAKC,KADZ,CACFD,MADE;AAETA,IAAAA,MAAM,CAACE,OAAP,CAAgBC,IAAD,IAAU;AACrB,WAAKC,qBAAL,CAA2BD,IAAI,CAACE,EAAhC;AACH,KAFD;AAIH;;AAEDD,EAAAA,qBAAqB,CAACE,MAAD,EAAQ;AAAA,wBACD,KAAKL,KADJ;AAAA,UACnBM,MADmB,eACnBA,MADmB;AAAA,UACXC,MADW,eACXA,MADW;AAEzB,QAAIC,QAAQ,GAAEF,MAAM,GAAG,MAAT,GAAkBD,MAAlB,GAA2B,SAA3B,GAAuCE,MAArD;AAGAE,IAAAA,KAAK,CAACD,QAAD,CAAL,CAAgBE,IAAhB,CAAsBC,QAAD,IAAc;AAC/B,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAFD,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClB;AACAjB,MAAAA,MAAM,CAACmB,IAAP,CAAYF,QAAZ;AACH,KALD;AAMA,SAAKG,QAAL,CAAc;AACVC,MAAAA,gBAAgB,EAAErB;AADR,KAAd;AAIH;;AAEDsB,EAAAA,iBAAiB,GAAE,CAElB;;AAEDC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKjB,KAAL,CAAWe,gBAAX,CAA4BG,GAA5B,CAAgC,CAAChB,IAAD,EAAOiB,KAAP,KAAiB;AAC7C,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKjB,IAAL,CADJ,CADJ;AAKH,KAND,CAFR,CADJ;AAaH;;AAjD8B;;AAoDnC,eAAeP,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport weatherConfig from '../config/config'\n\nlet myData = [];\n\nclass WeatherBox extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    getCitiesID(){\n        const {cities}= this.state;\n        cities.forEach((item) => {\n            this.getFetchCitiesWeather(item.id)\n        });\n        \n    }\n    \n    getFetchCitiesWeather(cityID){\n        const{apiURL, apiKey} = this.state;\n        let fetchURL= apiURL + \"?id=\" + cityID + \"&appid=\" + apiKey; \n        \n        \n        fetch(fetchURL).then((response) => {\n            return response.json();\n        }).then((response) => {\n            //console.log(response)\n            myData.push(response)\n        });\n        this.setState({\n            weatherFetchData: myData\n        });\n        \n    }\n\n    componentDidMount(){\n        \n    }\n\n    render() {\n        \n        return (\n            <div>\n                {\n                    this.state.weatherFetchData.map((item, index) => {\n                        return(\n                            <div>\n                                <h2>{item}</h2>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default WeatherBox"]},"metadata":{},"sourceType":"module"}