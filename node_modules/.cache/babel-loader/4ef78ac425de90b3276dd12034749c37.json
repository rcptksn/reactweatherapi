{"ast":null,"code":"var _jsxFileName = \"/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport WeatherBox from './components/WeatherBox';\nimport Weather30Days from './components/Weather30Days';\nlet myData = [];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n      api30DaysURL: weatherConfig.weatherData.weatherAPI.api30DaysURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n      cities: weatherConfig.weatherData.weatherCities,\n      weatherFetchData: [],\n      getCityID: ''\n    };\n  }\n\n  getCitiesID() {\n    const cities = this.state.cities;\n    cities.forEach(city => {\n      const _this$state = this.state,\n            apiURL = _this$state.apiURL,\n            apiKey = _this$state.apiKey;\n      let fetchURL = apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey;\n      fetch(fetchURL).then(response => {\n        return response.json();\n      }).then(response => {\n        myData.push(response);\n        this.setState({\n          weatherFetchData: myData\n        });\n      }).catch(err => {\n        console.log('Bir hata oluştu.' + err);\n      });\n    });\n  }\n\n  get30DaysWeather(getCityID) {\n    this.setState({\n      getCityID: getCityID\n    });\n  }\n\n  componentDidMount() {\n    this.getCitiesID();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(WeatherBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/App.js"],"names":["React","Component","WeatherBox","Weather30Days","myData","App","constructor","props","state","apiURL","weatherConfig","weatherData","weatherAPI","api30DaysURL","apiKey","imageURL","cities","weatherCities","weatherFetchData","getCityID","getCitiesID","forEach","city","fetchURL","id","fetch","then","response","json","push","setState","catch","err","console","log","get30DaysWeather","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,IAAIC,MAAM,GAAE,EAAZ;;AACA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACTC,MAAAA,MAAM,EAAEC,aAAa,CAACC,WAAd,CAA0BC,UAA1B,CAAqCH,MADpC;AAETI,MAAAA,YAAY,EAAEH,aAAa,CAACC,WAAd,CAA0BC,UAA1B,CAAqCC,YAF1C;AAGTC,MAAAA,MAAM,EAAEJ,aAAa,CAACC,WAAd,CAA0BC,UAA1B,CAAqCE,MAHpC;AAITC,MAAAA,QAAQ,EAAEL,aAAa,CAACC,WAAd,CAA0BC,UAA1B,CAAqCG,QAJtC;AAKTC,MAAAA,MAAM,EAAEN,aAAa,CAACC,WAAd,CAA0BM,aALzB;AAMTC,MAAAA,gBAAgB,EAAE,EANT;AAOTC,MAAAA,SAAS,EAAE;AAPF,KAAX;AAUD;;AAEDC,EAAAA,WAAW,GAAE;AAAA,UACJJ,MADI,GACK,KAAKR,KADV,CACJQ,MADI;AAEXA,IAAAA,MAAM,CAACK,OAAP,CAAgBC,IAAD,IAAU;AAAA,0BACG,KAAKd,KADR;AAAA,YACfC,MADe,eACfA,MADe;AAAA,YACPK,MADO,eACPA,MADO;AAErB,UAAIS,QAAQ,GAAEd,MAAM,GAAG,MAAT,GAAkBa,IAAI,CAACE,EAAvB,GAA4B,SAA5B,GAAwCV,MAAtD;AAEAW,MAAAA,KAAK,CAACF,QAAD,CAAL,CAAgBG,IAAhB,CAAsBC,QAAD,IAAc;AAC/B,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAFD,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClBvB,QAAAA,MAAM,CAACyB,IAAP,CAAYF,QAAZ;AACA,aAAKG,QAAL,CAAc;AACVZ,UAAAA,gBAAgB,EAAEd;AADR,SAAd;AAGH,OAPD,EAOG2B,KAPH,CAOUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBF,GAAjC;AACH,OATD;AAUH,KAdD;AAeD;;AAEDG,EAAAA,gBAAgB,CAAChB,SAAD,EAAW;AACvB,SAAKW,QAAL,CAAc;AACVX,MAAAA,SAAS,EAAEA;AADD,KAAd;AAGH;;AAEDiB,EAAAA,iBAAiB,GAAE;AACf,SAAKhB,WAAL;AACH;;AAEDiB,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAnDyB;;AAsD5B,eAAehC,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport WeatherBox from './components/WeatherBox';\nimport Weather30Days from './components/Weather30Days';\n\nlet myData= [];\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n      apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n      api30DaysURL: weatherConfig.weatherData.weatherAPI.api30DaysURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n      cities: weatherConfig.weatherData.weatherCities,\n      weatherFetchData: [],\n      getCityID: ''\n    }\n\n  }\n\n  getCitiesID(){\n    const {cities}= this.state;\n    cities.forEach((city) => {\n        const{apiURL, apiKey} = this.state;\n        let fetchURL= apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey; \n\n        fetch(fetchURL).then((response) => {\n            return response.json();\n        }).then((response) => {\n            myData.push(response);\n            this.setState({\n                weatherFetchData: myData\n            })\n        }).catch((err) => {\n            console.log('Bir hata oluştu.' + err);\n        });\n    });\n  }\n\n  get30DaysWeather(getCityID){\n      this.setState({\n          getCityID: getCityID\n      })    \n  }\n\n  componentDidMount(){\n      this.getCitiesID();\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <WeatherBox />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}