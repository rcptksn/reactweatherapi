{"ast":null,"code":"var _jsxFileName = \"/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport WeatherBox from './components/WeatherBox';\nimport Weather30Days from './components/Weather30Days';\nimport weatherConfig from './config/config';\nlet myData = [];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n      api30DaysURL: weatherConfig.weatherData.weatherAPI.api30DaysURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n      cities: weatherConfig.weatherData.weatherCities,\n      weatherFetchData: [],\n      weather30DayFetchData: [],\n      getCityID: '',\n      getCityName: ''\n    };\n  }\n\n  getCitiesID() {\n    const cities = this.state.cities;\n    cities.forEach(city => {\n      const _this$state = this.state,\n            apiURL = _this$state.apiURL,\n            apiKey = _this$state.apiKey;\n      let fetchURL = apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey;\n      fetch(fetchURL).then(response => {\n        return response.json();\n      }).then(response => {\n        myData.push(response);\n        this.setState({\n          weatherFetchData: myData\n        });\n      }).catch(err => {\n        console.log('Bir hata oluştu.' + err);\n      });\n    });\n  }\n\n  get30DaysWeather() {\n    const myCityID = this.props.myCityID;\n    let myCityName = \"\";\n\n    if (myCityID != \"\") {\n      const _this$state2 = this.state,\n            api30DaysURL = _this$state2.api30DaysURL,\n            apiKey = _this$state2.apiKey;\n      let fetchURL = api30DaysURL + \"?id=\" + myCityID + \"&appid=\" + apiKey;\n      fetch(fetchURL).then(response => {\n        return response.json();\n      }).then(response => {\n        myCityName = response.city.name;\n        return response.list;\n      }).then(response => {\n        this.setState({\n          weather30DayFetchData: response\n        });\n      }).catch(err => {\n        console.log('Bir hata oluştu.' + err);\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getCitiesID();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(WeatherBox, {\n      weatherFetchData: this.state.weatherFetchData,\n      weatherID: this.state.myCityID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Weather30Days, {\n      myCityName: \"\\u0130stanbul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/App.js"],"names":["React","Component","WeatherBox","Weather30Days","weatherConfig","myData","App","constructor","props","state","apiURL","weatherData","weatherAPI","api30DaysURL","apiKey","imageURL","cities","weatherCities","weatherFetchData","weather30DayFetchData","getCityID","getCityName","getCitiesID","forEach","city","fetchURL","id","fetch","then","response","json","push","setState","catch","err","console","log","get30DaysWeather","myCityID","myCityName","name","list","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport WeatherBox from './components/WeatherBox';\nimport Weather30Days from './components/Weather30Days';\nimport weatherConfig from './config/config'\n\nlet myData= [];\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n      apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n      api30DaysURL: weatherConfig.weatherData.weatherAPI.api30DaysURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n      cities: weatherConfig.weatherData.weatherCities,\n      weatherFetchData: [],\n      weather30DayFetchData: [],\n      getCityID: '',\n      getCityName: ''\n    }\n  }\n\n  getCitiesID(){\n    const {cities}= this.state;\n    cities.forEach((city) => {\n        const{apiURL, apiKey} = this.state;\n        let fetchURL= apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey; \n\n        fetch(fetchURL).then((response) => {\n            return response.json();\n        }).then((response) => {\n            myData.push(response);\n            this.setState({\n                weatherFetchData: myData\n            })\n        }).catch((err) => {\n            console.log('Bir hata oluştu.' + err);\n        });\n    });\n  }\n\n\n  get30DaysWeather(){\n    const {myCityID} = this.props;\n    let myCityName=\"\";\n    if(myCityID != \"\")\n    {\n        const{api30DaysURL, apiKey} = this.state;\n        let fetchURL= api30DaysURL + \"?id=\" + myCityID + \"&appid=\" + apiKey; \n        \n        fetch(fetchURL).then((response) => {\n            return response.json();\n        }).then((response) => {\n            myCityName= response.city.name;\n            return response.list;\n        }).then((response) => {\n            this.setState({\n                weather30DayFetchData: response\n            });\n        }).catch((err) => {\n            console.log('Bir hata oluştu.' + err);\n        });  \n    }\n  }\n\n  componentDidMount(){\n      this.getCitiesID();\n  }\n\n  \n\n  render(){\n    return (\n      <div className=\"App\">\n        <WeatherBox weatherFetchData={this.state.weatherFetchData} weatherID={this.state.myCityID} />\n        <Weather30Days myCityName= 'İstanbul' />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}