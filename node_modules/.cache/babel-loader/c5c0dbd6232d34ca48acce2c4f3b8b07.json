{"ast":null,"code":"var _jsxFileName = \"/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/WeatherBox.js\";\nimport React, { Component } from 'react';\nimport weatherConfig from '../config/config';\nlet myData = [];\n\nclass WeatherBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n      cities: weatherConfig.weatherData.weatherCities,\n      weatherFetchData: []\n    };\n  }\n\n  getCitiesID() {\n    const cities = this.state.cities;\n    cities.forEach(city => {\n      const _this$state = this.state,\n            apiURL = _this$state.apiURL,\n            apiKey = _this$state.apiKey;\n      let fetchURL = apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey;\n      fetch(fetchURL).then(response => {\n        return response.json();\n      }).then(response => {\n        myData.push(response);\n        this.setState({\n          weatherFetchData: myData\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getCitiesID();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"appWeatherDatas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.weatherFetchData.map((item, index) => {\n      return React.createElement(\"div\", {\n        className: \"weatherItems\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cityTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, item.name), React.createElement(\"div\", {\n        className: \"weatherIcon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.imageURL + item.weather[0].icon + '.png',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"tempData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, item.main.temp, \" \", React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"o\"), \"C\")), React.createElement(\"div\", {\n        className: \"tempInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"En Y\\xFCksek: \"), \" \", item.main.temp_max, \" \", React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"o\")), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"En D\\xFC\\u015F\\xFCk: \"), \" \", item.main.temp_min, React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"o\"))));\n    }));\n  }\n\n}\n\nexport default WeatherBox;","map":{"version":3,"sources":["/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/WeatherBox.js"],"names":["React","Component","weatherConfig","myData","WeatherBox","constructor","props","state","apiURL","weatherData","weatherAPI","apiKey","imageURL","cities","weatherCities","weatherFetchData","getCitiesID","forEach","city","fetchURL","id","fetch","then","response","json","push","setState","componentDidMount","render","map","item","index","name","weather","icon","main","temp","temp_max","temp_min"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport weatherConfig from '../config/config'\n\nlet myData = [];\n\nclass WeatherBox extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n            apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n            imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n            cities: weatherConfig.weatherData.weatherCities,\n            weatherFetchData: []\n        }\n    }\n\n    getCitiesID(){\n        const {cities}= this.state;\n        cities.forEach((city) => {\n            const{apiURL, apiKey} = this.state;\n            let fetchURL= apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey; \n\n            fetch(fetchURL).then((response) => {\n                return response.json();\n            }).then((response) => {\n                myData.push(response);\n                this.setState({\n                    weatherFetchData: myData\n                })\n            });\n        });\n        \n    }\n\n    componentDidMount(){\n        this.getCitiesID();\n    }\n\n    render() {\n        \n        return (\n            <div className=\"appWeatherDatas\">\n                {\n                    this.state.weatherFetchData.map((item, index) => {\n                        return(\n                            <div className=\"weatherItems\" key={index}>\n                                <div className=\"cityTitle\">\n                                    {item.name}\n                                </div>\n                                <div className=\"weatherIcon\">\n                                    <img src={this.state.imageURL + item.weather[0].icon + '.png'} />\n                                    <span className=\"tempData\">{item.main.temp} <sup>o</sup>C</span>\n                                </div>\n                                <div className=\"tempInfo\">\n                                    <span><b>En Yüksek: </b> {item.main.temp_max} <sup>o</sup></span>\n                                    <span><b>En Düşük: </b> {item.main.temp_min}<sup>o</sup></span>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n                \n            </div>\n        )\n    }\n}\n\nexport default WeatherBox;"]},"metadata":{},"sourceType":"module"}