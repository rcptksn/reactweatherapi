{"ast":null,"code":"var _jsxFileName = \"/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/WeatherBox.js\";\nimport React, { Component } from 'react';\nimport weatherConfig from '../config/config';\nimport Weather30Days from './Weather30Days';\nlet myData = [];\n\nclass WeatherBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n      api30DaysURL: weatherConfig.weatherData.weatherAPI.api30DaysURL,\n      apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n      imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n      cities: weatherConfig.weatherData.weatherCities,\n      weatherFetchData: [],\n      getCityID: ''\n    };\n    this.get30DaysWeather = this.get30DaysWeather.bind(this);\n  }\n\n  getCitiesID() {\n    const cities = this.state.cities;\n    cities.forEach(city => {\n      const _this$state = this.state,\n            apiURL = _this$state.apiURL,\n            apiKey = _this$state.apiKey;\n      let fetchURL = apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey;\n      fetch(fetchURL).then(response => {\n        return response.json();\n      }).then(response => {\n        myData.push(response);\n        this.setState({\n          weatherFetchData: myData\n        });\n      });\n    });\n  }\n\n  get30DaysWeather(getCityID) {\n    this.setState({\n      getCityID: getCityID\n    });\n  }\n\n  componentDidMount() {\n    this.getCitiesID();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"appWeatherDatas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.weatherFetchData.map((item, index) => {\n      return React.createElement(\"div\", {\n        className: \"weatherItems\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cityTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, item.name), React.createElement(\"div\", {\n        className: \"weatherIcon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.imageURL + item.weather[0].icon + '.png',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"tempData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, item.main.temp, \" \", React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"o\"), \"C\")), React.createElement(\"div\", {\n        className: \"tempInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"En Y\\xFCksek: \"), \" \", item.main.temp_max, \" \", React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"o\")), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"En D\\xFC\\u015F\\xFCk: \"), \" \", item.main.temp_min, React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"o\"))), React.createElement(\"div\", {\n        className: \"extraInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"R\\xFCzgar: \"), \" \", item.wind.speed, React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" km/s\")), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Nem: \"), \" \", item.main.humidity, React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \" %\")), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Bulut: \"), \" \", item.clouds.all, React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" %\"))), React.createElement(\"div\", {\n        className: \"btn30Days\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.get30DaysWeather(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"30 G\\xFCnl\\xFCk Hava Durumu \\u0130\\xE7in T\\u0131klay\\u0131n\")));\n    })), React.createElement(Weather30Days, {\n      myCityID: this.state.getCityID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WeatherBox;","map":{"version":3,"sources":["/Users/recepteksan/Code/_Test/_React/ReactTutorial/reactweatherapi/src/components/WeatherBox.js"],"names":["React","Component","weatherConfig","Weather30Days","myData","WeatherBox","constructor","props","state","apiURL","weatherData","weatherAPI","api30DaysURL","apiKey","imageURL","cities","weatherCities","weatherFetchData","getCityID","get30DaysWeather","bind","getCitiesID","forEach","city","fetchURL","id","fetch","then","response","json","push","setState","componentDidMount","render","map","item","index","name","weather","icon","main","temp","temp_max","temp_min","wind","speed","humidity","clouds","all"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport weatherConfig from '../config/config'\nimport Weather30Days from './Weather30Days';\n\nlet myData = [];\n\nclass WeatherBox extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            apiURL: weatherConfig.weatherData.weatherAPI.apiURL,\n            api30DaysURL: weatherConfig.weatherData.weatherAPI.api30DaysURL,\n            apiKey: weatherConfig.weatherData.weatherAPI.apiKey,\n            imageURL: weatherConfig.weatherData.weatherAPI.imageURL,\n            cities: weatherConfig.weatherData.weatherCities,\n            weatherFetchData: [],\n            getCityID: ''\n        }\n\n        this.get30DaysWeather=this.get30DaysWeather.bind(this)\n    }\n\n    getCitiesID(){\n        const {cities}= this.state;\n        cities.forEach((city) => {\n            const{apiURL, apiKey} = this.state;\n            let fetchURL= apiURL + \"?id=\" + city.id + \"&appid=\" + apiKey; \n\n            fetch(fetchURL).then((response) => {\n                return response.json();\n            }).then((response) => {\n                myData.push(response);\n                this.setState({\n                    weatherFetchData: myData\n                })\n            });\n        });\n        \n    }\n\n    get30DaysWeather(getCityID){\n        \n        this.setState({\n            getCityID: getCityID\n        })\n           \n    }\n\n    componentDidMount(){\n        this.getCitiesID();\n    }\n\n    render() {\n        \n        return (\n            <div className=\"appWeatherDatas\">\n                <div className=\"row col\">\n                {\n                    this.state.weatherFetchData.map((item, index) => {\n                        return(\n                            <div className=\"weatherItems\" key={index}>\n                                <div className=\"cityTitle\">\n                                    {item.name}\n                                </div>\n                                <div className=\"weatherIcon\">\n                                    <img src={this.state.imageURL + item.weather[0].icon + '.png'} />\n                                    <span className=\"tempData\">{item.main.temp} <sup>o</sup>C</span>\n                                </div>\n                                <div className=\"tempInfo\">\n                                    <span><b>En Yüksek: </b> {item.main.temp_max} <sup>o</sup></span>\n                                    <span><b>En Düşük: </b> {item.main.temp_min}<sup>o</sup></span>\n                                </div>\n                                <div className=\"extraInfo\">\n                                    <span><b>Rüzgar: </b> {item.wind.speed}<sup> km/s</sup></span>\n                                    <span><b>Nem: </b> {item.main.humidity}<sup> %</sup></span>\n                                    <span><b>Bulut: </b> {item.clouds.all}<sup> %</sup></span>\n                                </div>\n                                <div className=\"btn30Days\">\n                                    <button onClick={() => this.get30DaysWeather(item.id)}>30 Günlük Hava Durumu İçin Tıklayın</button>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n                </div>\n                <Weather30Days myCityID={this.state.getCityID} />\n            </div>\n            \n        )\n    }\n}\n\nexport default WeatherBox;"]},"metadata":{},"sourceType":"module"}